package org.secret_sharing

import org.secret_sharing.Validation.{InvalidInput, ShareError}

/**
 * prime numbers less than `2^x`
 **/
object BigPrimes {

  def extractPrime(secret: Array[Byte]): Either[ShareError, BigInt] =
    BigPrimes.primes.find { case(_, primeBits) => primeBits > secret.length * 8 }
      .map { case(prime, _) => Right(prime) }
      .getOrElse(Left(InvalidInput(s"secret must be less than 4096 Bit, is ${secret.length * 8}")))

  val p4096 = BigInt(
    "573411600695776643681050208251446306260839216431802190175783707752574214177428046117888437259537125077994311354624536743943950899473249872730632013708438612611633171571862096810928446950539426117911475200489085855980202859043747353479087711613304647440096309415349881237929686232927706691105255854195542786590468446754294534741483240994464601078932335632791503886275352700109070233728683024758265327766440550465188266725648097593747371420639427105569099139867690563864015463364939111020678994920599220175267556418540205279568044756583136530038496754795098774095818030350457641701519085108787635959782495046227301865316701087300723955878546676306605154228371192634096208965197686998684439031969077683530080791018439688351495936575631451064115044311715382150040917278504193686686454919157588917098769703381086932047025359868412047434689552896733822291157247693896186752778441226927547560063215855381523420310520887639091972926355587387058465557506186024297930403489028688806384741199263650499548229645960841313989095458448664713528617145591601026995253174222871577136910873238258370815034454258721066487152798412966803378239270589583502399896720529545750069874317501735167690107512354631291431726481371495335180536439246816658289518509"
  )

  val p2048 = BigInt(
    "17743339201362937283039069836388523874993212462614173312376125938423150786698944279037669945027409556053000583429563836237357750511475475078002802520776624965685405283536657898569404254263050080269090481026363211981431149177798808216267533685382012840360987303185411151549981111058076698251537227675918266656556250210129454075765897977533945087066056869051038212530745321078589878370102204020626495196977337924382606572802820999147494058493236811608541825762870417489700732067893946196223424901164051233682904645992123437585508916989313066429676375074413045816623759853384924748149351446542673829085841017879244001773"
  )

  val p1024 = BigInt(
    "98700600548946789755385520177934165667521228731948917602075462330918250647788976902914607410296252172748296210914615533594876637029621915350129029770120960121890940334017291024421662071082602800453143369382916150647283081797814778562279517649459204664452166607217245660169074724777559699427099514086529933347"
  )

  val p512 = BigInt(
    "7361427092681313269810524519830455803016610949053270811455406004054541098502376421162898176865507507308336261795884733274980097792286908726033065279199919"
  )

  val p256 = BigInt(
    "63574525178434675520919110612617790188838455224605793375448261198143363501617"
  )

  val p128 = BigInt(
    "186828738008648101995486165513782577599"
  )

  val primes = List(p128 -> 128, p256 -> 256, p512 -> 512, p1024 -> 1024, p2048 -> 2048, p4096 -> 4096)
}
